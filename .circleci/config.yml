version: 2
jobs:
  build:
    docker:
      - image: kkarczmarczyk/node-yarn
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: 
          name: "Install dependencies"
          command: source ci/scripts/install.sh

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run: 
          name: "Build application"
          command: |
            source ci/scripts/create_config_file.sh
            yarn build
 
  test:
    docker:
      - image: kkarczmarczyk/node-yarn
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: 
          name: "Install dependencies"
          command: source ci/scripts/install.sh

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run: 
          name: "Run tests"
          command: |
            source ci/scripts/create_config_file.sh
            yarn test

      - run: 
          name: "Run sonarwhal"
          command: source ci/scripts/sonarwhal.sh
 
  deploy:
    docker:
      - image: kkarczmarczyk/node-yarn
    working_directory: ~/repo
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-

      - run: 
          name: "Install dependencies"
          command: source ci/scripts/install.sh

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: 
          name: "Install Transifex Client and Files"
          command: source ci/scripts/transifex.sh

      - run: 
          name: "Build application"
          command: |
            source ci/scripts/create_config_file.sh
            yarn build
      
      - run:
          name: "Create artifact"
          command: |
            mkdir /tmp/artifacts
            zip -r ./build.zip build/* > /tmp/artifacts/build.zip
      
      - store_artifacts:
          path: /tmp/artifacts
          destination: artifacts
      
      - run:
          name: "Configure GIT"
          command: source ci/scripts/git_config.sh
      
      - run: 
          name: "Deploy application"
          command: |
            source ci/scripts/deploy.sh
            sonarwhal https://dev.flyve.org/dashboard/

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: 
                - develop
                - master
